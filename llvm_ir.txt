declare i32 @getint(...) 
declare void @putint(i32)
declare void @putstr(i8* )

@s0 = constant [8 x i8] c"Error!
\00"
@s1 = constant [2 x i8] c" \00"
@s2 = constant [2 x i8] c"
\00"
@s3 = constant [2 x i8] c" \00"
@s4 = constant [2 x i8] c"
\00"
@s5 = constant [10 x i8] c"19373372
\00"
@s6 = constant [56 x i8] c"a[n] = a[n - 1] + a[n - 2] (for different init values)
\00"
@s7 = constant [12 x i8] c"/* input = \00"
@s8 = constant [5 x i8] c" */
\00"
@s9 = constant [13 x i8] c"when a[0] = \00"
@s10 = constant [10 x i8] c", a[1] = \00"
@s11 = constant [8 x i8] c" ==> a[\00"
@s12 = constant [5 x i8] c"] = \00"
@s13 = constant [2 x i8] c"
\00"
@s14 = constant [40 x i8] c"//////////////////////////////////////
\00"
@s15 = constant [45 x i8] c"/****************** END ******************/
\00"

@g0 = dso_local global [4 x i32] [i32 1, i32 1, i32 1, i32 0]
@g1 = dso_local global [4 x i32] [i32 5, i32 5, i32 2, i32 3]
@g2 = dso_local global [4 x i32] [i32 1, i32 1, i32 1, i32 0]

define dso_local void @f___vec_mul(i32* %a0, i32* %a1, i32* %a2) {
b0:
	%v0 = getelementptr inbounds i32, i32* %a0, i32 0
	%v1 = getelementptr inbounds i32, i32* %a2, i32 0
	%v2 = load i32, i32* %v1
	%v3 = mul i32 2, 0
	%v4 = add i32 %v3, 0
	%v5 = getelementptr inbounds i32, i32* %a1, i32 %v4
	%v6 = load i32, i32* %v5
	%v7 = mul i32 %v2, %v6
	%v8 = getelementptr inbounds i32, i32* %a2, i32 1
	%v9 = load i32, i32* %v8
	%v10 = mul i32 2, 0
	%v11 = add i32 %v10, 1
	%v12 = getelementptr inbounds i32, i32* %a1, i32 %v11
	%v13 = load i32, i32* %v12
	%v14 = mul i32 %v9, %v13
	%v15 = add i32 %v7, %v14
	store i32 %v15, i32* %v0
	%v17 = getelementptr inbounds i32, i32* %a0, i32 1
	%v18 = getelementptr inbounds i32, i32* %a2, i32 0
	%v19 = load i32, i32* %v18
	%v20 = mul i32 2, 1
	%v21 = add i32 %v20, 0
	%v22 = getelementptr inbounds i32, i32* %a1, i32 %v21
	%v23 = load i32, i32* %v22
	%v24 = mul i32 %v19, %v23
	%v25 = getelementptr inbounds i32, i32* %a2, i32 1
	%v26 = load i32, i32* %v25
	%v27 = mul i32 2, 1
	%v28 = add i32 %v27, 1
	%v29 = getelementptr inbounds i32, i32* %a1, i32 %v28
	%v30 = load i32, i32* %v29
	%v31 = mul i32 %v26, %v30
	%v32 = add i32 %v24, %v31
	store i32 %v32, i32* %v17
	ret void
}

define dso_local void @f___mat_mul(i32* %a3, i32* %a4, i32* %a5) {
b1:
	%v0 = mul i32 2, 0
	%v1 = add i32 %v0, 0
	%v2 = getelementptr inbounds i32, i32* %a3, i32 %v1
	%v3 = mul i32 2, 0
	%v4 = add i32 %v3, 0
	%v5 = getelementptr inbounds i32, i32* %a4, i32 %v4
	%v6 = load i32, i32* %v5
	%v7 = mul i32 2, 0
	%v8 = add i32 %v7, 0
	%v9 = getelementptr inbounds i32, i32* %a5, i32 %v8
	%v10 = load i32, i32* %v9
	%v11 = mul i32 %v6, %v10
	%v12 = mul i32 2, 0
	%v13 = add i32 %v12, 1
	%v14 = getelementptr inbounds i32, i32* %a4, i32 %v13
	%v15 = load i32, i32* %v14
	%v16 = mul i32 2, 1
	%v17 = add i32 %v16, 0
	%v18 = getelementptr inbounds i32, i32* %a5, i32 %v17
	%v19 = load i32, i32* %v18
	%v20 = mul i32 %v15, %v19
	%v21 = add i32 %v11, %v20
	store i32 %v21, i32* %v2
	%v23 = mul i32 2, 0
	%v24 = add i32 %v23, 1
	%v25 = getelementptr inbounds i32, i32* %a3, i32 %v24
	%v26 = mul i32 2, 0
	%v27 = add i32 %v26, 0
	%v28 = getelementptr inbounds i32, i32* %a4, i32 %v27
	%v29 = load i32, i32* %v28
	%v30 = mul i32 2, 0
	%v31 = add i32 %v30, 1
	%v32 = getelementptr inbounds i32, i32* %a5, i32 %v31
	%v33 = load i32, i32* %v32
	%v34 = mul i32 %v29, %v33
	%v35 = mul i32 2, 0
	%v36 = add i32 %v35, 1
	%v37 = getelementptr inbounds i32, i32* %a4, i32 %v36
	%v38 = load i32, i32* %v37
	%v39 = mul i32 2, 1
	%v40 = add i32 %v39, 1
	%v41 = getelementptr inbounds i32, i32* %a5, i32 %v40
	%v42 = load i32, i32* %v41
	%v43 = mul i32 %v38, %v42
	%v44 = add i32 %v34, %v43
	store i32 %v44, i32* %v25
	%v46 = mul i32 2, 1
	%v47 = add i32 %v46, 0
	%v48 = getelementptr inbounds i32, i32* %a3, i32 %v47
	%v49 = mul i32 2, 1
	%v50 = add i32 %v49, 0
	%v51 = getelementptr inbounds i32, i32* %a4, i32 %v50
	%v52 = load i32, i32* %v51
	%v53 = mul i32 2, 0
	%v54 = add i32 %v53, 0
	%v55 = getelementptr inbounds i32, i32* %a5, i32 %v54
	%v56 = load i32, i32* %v55
	%v57 = mul i32 %v52, %v56
	%v58 = mul i32 2, 1
	%v59 = add i32 %v58, 1
	%v60 = getelementptr inbounds i32, i32* %a4, i32 %v59
	%v61 = load i32, i32* %v60
	%v62 = mul i32 2, 1
	%v63 = add i32 %v62, 0
	%v64 = getelementptr inbounds i32, i32* %a5, i32 %v63
	%v65 = load i32, i32* %v64
	%v66 = mul i32 %v61, %v65
	%v67 = add i32 %v57, %v66
	store i32 %v67, i32* %v48
	%v69 = mul i32 2, 1
	%v70 = add i32 %v69, 1
	%v71 = getelementptr inbounds i32, i32* %a3, i32 %v70
	%v72 = mul i32 2, 1
	%v73 = add i32 %v72, 0
	%v74 = getelementptr inbounds i32, i32* %a4, i32 %v73
	%v75 = load i32, i32* %v74
	%v76 = mul i32 2, 0
	%v77 = add i32 %v76, 1
	%v78 = getelementptr inbounds i32, i32* %a5, i32 %v77
	%v79 = load i32, i32* %v78
	%v80 = mul i32 %v75, %v79
	%v81 = mul i32 2, 1
	%v82 = add i32 %v81, 1
	%v83 = getelementptr inbounds i32, i32* %a4, i32 %v82
	%v84 = load i32, i32* %v83
	%v85 = mul i32 2, 1
	%v86 = add i32 %v85, 1
	%v87 = getelementptr inbounds i32, i32* %a5, i32 %v86
	%v88 = load i32, i32* %v87
	%v89 = mul i32 %v84, %v88
	%v90 = add i32 %v80, %v89
	store i32 %v90, i32* %v71
	ret void
}

define dso_local i32 @f___power(i32 %a6, i32* %a7, i32* %a8) {
b2:
	%v0 = alloca i32
	store i32 %a6, i32* %v0
	%v2 = load i32, i32* %v0
	%v3 = icmp eq i32 %v2, 1
	br i1 %v3, label %b3, label %b4
b3:
	%v5 = mul i32 2, 0
	%v6 = add i32 %v5, 0
	%v7 = getelementptr inbounds i32, i32* %a8, i32 %v6
	%v8 = mul i32 2, 0
	%v9 = add i32 %v8, 0
	%v10 = getelementptr inbounds i32, i32* %a7, i32 %v9
	%v11 = load i32, i32* %v10
	store i32 %v11, i32* %v7
	%v13 = mul i32 2, 0
	%v14 = add i32 %v13, 1
	%v15 = getelementptr inbounds i32, i32* %a8, i32 %v14
	%v16 = mul i32 2, 0
	%v17 = add i32 %v16, 1
	%v18 = getelementptr inbounds i32, i32* %a7, i32 %v17
	%v19 = load i32, i32* %v18
	store i32 %v19, i32* %v15
	%v21 = mul i32 2, 1
	%v22 = add i32 %v21, 0
	%v23 = getelementptr inbounds i32, i32* %a8, i32 %v22
	%v24 = mul i32 2, 1
	%v25 = add i32 %v24, 0
	%v26 = getelementptr inbounds i32, i32* %a7, i32 %v25
	%v27 = load i32, i32* %v26
	store i32 %v27, i32* %v23
	%v29 = mul i32 2, 1
	%v30 = add i32 %v29, 1
	%v31 = getelementptr inbounds i32, i32* %a8, i32 %v30
	%v32 = mul i32 2, 1
	%v33 = add i32 %v32, 1
	%v34 = getelementptr inbounds i32, i32* %a7, i32 %v33
	%v35 = load i32, i32* %v34
	store i32 %v35, i32* %v31
	ret i32 0
	br label %b5
b4:
	%v39 = getelementptr inbounds i32, i32* %a8, i32 0
	%v40 = getelementptr inbounds i32, i32* %a7, i32 0
	%v41 = getelementptr inbounds [4 x i32], [4 x i32]* @g0, i32 0, i32 0
	call void @f___mat_mul(i32* %v39, i32* %v40, i32* %v41)
	%v43 = mul i32 2, 0
	%v44 = add i32 %v43, 0
	%v45 = getelementptr inbounds i32, i32* %a7, i32 %v44
	%v46 = mul i32 2, 0
	%v47 = add i32 %v46, 0
	%v48 = getelementptr inbounds i32, i32* %a8, i32 %v47
	%v49 = load i32, i32* %v48
	store i32 %v49, i32* %v45
	%v51 = mul i32 2, 0
	%v52 = add i32 %v51, 1
	%v53 = getelementptr inbounds i32, i32* %a7, i32 %v52
	%v54 = mul i32 2, 0
	%v55 = add i32 %v54, 1
	%v56 = getelementptr inbounds i32, i32* %a8, i32 %v55
	%v57 = load i32, i32* %v56
	store i32 %v57, i32* %v53
	%v59 = mul i32 2, 1
	%v60 = add i32 %v59, 0
	%v61 = getelementptr inbounds i32, i32* %a7, i32 %v60
	%v62 = mul i32 2, 1
	%v63 = add i32 %v62, 0
	%v64 = getelementptr inbounds i32, i32* %a8, i32 %v63
	%v65 = load i32, i32* %v64
	store i32 %v65, i32* %v61
	%v67 = mul i32 2, 1
	%v68 = add i32 %v67, 1
	%v69 = getelementptr inbounds i32, i32* %a7, i32 %v68
	%v70 = mul i32 2, 1
	%v71 = add i32 %v70, 1
	%v72 = getelementptr inbounds i32, i32* %a8, i32 %v71
	%v73 = load i32, i32* %v72
	store i32 %v73, i32* %v69
	%v75 = load i32, i32* %v0
	%v76 = sub i32 %v75, 1
	%v77 = getelementptr inbounds i32, i32* %a7, i32 0
	%v78 = getelementptr inbounds i32, i32* %a8, i32 0
	%v79 = call i32 @f___power(i32 %v76, i32* %v77, i32* %v78)
	ret i32 %v79
	br label %b5
b5:
	ret i32 0
}

define dso_local i32 @f_power(i32 %a9, i32* %a10) {
b6:
	%v0 = alloca i32
	store i32 %a9, i32* %v0
	%v2 = load i32, i32* %v0
	%v3 = icmp sle i32 %v2, 0
	br i1 %v3, label %b7, label %b8
b7:
	%v5 = sub i32 0, 1
	ret i32 %v5
	br label %b8
b8:
	%v8 = alloca [4 x i32]
	%v9 = getelementptr inbounds [4 x i32], [4 x i32]* %v8, i32 0, i32 0
	store i32 1, i32* %v9
	%v11 = getelementptr inbounds [4 x i32], [4 x i32]* %v8, i32 0, i32 1
	store i32 1, i32* %v11
	%v13 = getelementptr inbounds [4 x i32], [4 x i32]* %v8, i32 0, i32 2
	store i32 1, i32* %v13
	%v15 = getelementptr inbounds [4 x i32], [4 x i32]* %v8, i32 0, i32 3
	store i32 0, i32* %v15
	%v17 = load i32, i32* %v0
	%v18 = getelementptr inbounds [4 x i32], [4 x i32]* %v8, i32 0, i32 0
	%v19 = getelementptr inbounds i32, i32* %a10, i32 0
	%v20 = call i32 @f___power(i32 %v17, i32* %v18, i32* %v19)
	ret i32 %v20
}

define dso_local i32 @f_error() {
b9:
	call void @putstr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @s0, i64 0, i64 0))
	ret i32 1
}

define dso_local i32 @f_out(i32* %a11) {
b10:
	%v0 = mul i32 2, 0
	%v1 = add i32 %v0, 0
	%v2 = getelementptr inbounds i32, i32* %a11, i32 %v1
	%v3 = load i32, i32* %v2
	%v4 = mul i32 2, 0
	%v5 = add i32 %v4, 1
	%v6 = getelementptr inbounds i32, i32* %a11, i32 %v5
	%v7 = load i32, i32* %v6
	%v8 = mul i32 2, 1
	%v9 = add i32 %v8, 0
	%v10 = getelementptr inbounds i32, i32* %a11, i32 %v9
	%v11 = load i32, i32* %v10
	%v12 = mul i32 2, 1
	%v13 = add i32 %v12, 1
	%v14 = getelementptr inbounds i32, i32* %a11, i32 %v13
	%v15 = load i32, i32* %v14
	call void @putint(i32 %v3)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @s1, i64 0, i64 0))
	call void @putint(i32 %v7)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @s2, i64 0, i64 0))
	call void @putint(i32 %v11)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @s3, i64 0, i64 0))
	call void @putint(i32 %v15)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @s4, i64 0, i64 0))
	ret i32 1
}

define dso_local i32 @main() {
b11:
	%v0 = alloca i32
	store i32 0, i32* %v0
	%v2 = alloca i32
	%v3 = call i32 (...) @getint()
	store i32 %v3, i32* %v2
	%v5 = alloca [2 x i32]
	%v6 = getelementptr inbounds [2 x i32], [2 x i32]* %v5, i32 0, i32 0
	store i32 0, i32* %v6
	%v8 = getelementptr inbounds [2 x i32], [2 x i32]* %v5, i32 0, i32 1
	store i32 0, i32* %v8
	%v10 = alloca [4 x i32]
	%v11 = alloca [12 x i32]
	%v12 = sub i32 0, 1
	%v13 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 0
	store i32 1, i32* %v13
	%v15 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 1
	store i32 0, i32* %v15
	%v17 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 2
	store i32 1, i32* %v17
	%v19 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 3
	store i32 1, i32* %v19
	%v21 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 4
	store i32 2, i32* %v21
	%v23 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 5
	store i32 1, i32* %v23
	%v25 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 6
	store i32 3, i32* %v25
	%v27 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 7
	store i32 1, i32* %v27
	%v29 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 8
	store i32 4, i32* %v29
	%v31 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 9
	store i32 3, i32* %v31
	%v33 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 10
	store i32 %v12, i32* %v33
	%v35 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 11
	store i32 1, i32* %v35
	call void @putstr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @s5, i64 0, i64 0))
	call void @putstr(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @s6, i64 0, i64 0))
	br label %b12
b12:
	%v40 = load i32, i32* %v2
	%v41 = load i32, i32* %v0
	%v42 = icmp sgt i32 %v40, %v41
	br i1 %v42, label %b13, label %b14
b13:
	%v44 = alloca i32
	%v45 = call i32 (...) @getint()
	store i32 %v45, i32* %v44
	%v47 = alloca i32
	%v48 = load i32, i32* %v44
	%v49 = getelementptr inbounds [4 x i32], [4 x i32]* %v10, i32 0, i32 0
	%v50 = call i32 @f_power(i32 %v48, i32* %v49)
	store i32 %v50, i32* %v47
	%v52 = load i32, i32* %v44
	call void @putstr(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @s7, i64 0, i64 0))
	call void @putint(i32 %v52)
	call void @putstr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @s8, i64 0, i64 0))
	%v56 = load i32, i32* %v47
	%v57 = icmp ne i32 %v56, 0
	br i1 %v57, label %b17, label %b16
b14:
	call void @putstr(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @s15, i64 0, i64 0))
	ret i32 0
	ret i32 0
b15:
	%v62 = load i32, i32* %v2
	%v63 = sub i32 %v62, 1
	store i32 %v63, i32* %v2
	br label %b12
	br label %b16
b16:
	%v67 = load i32, i32* %v47
	%v68 = icmp ne i32 %v67, 0
	br i1 %v68, label %b18, label %b20
b17:
	%v59 = call i32 @f_error()
	%v60 = icmp ne i32 %v59, 0
	br i1 %v60, label %b15, label %b16
b18:
	%v74 = alloca i32
	store i32 0, i32* %v74
	br label %b21
b19:
	call void @putstr(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @s14, i64 0, i64 0))
	%v123 = load i32, i32* %v2
	%v124 = sub i32 1, %v123
	%v125 = sub i32 0, %v124
	%v126 = sub i32 0, %v125
	%v127 = sub i32 0, %v126
	store i32 %v127, i32* %v2
	br label %b12
b20:
	%v70 = getelementptr inbounds [4 x i32], [4 x i32]* %v10, i32 0, i32 0
	%v71 = call i32 @f_out(i32* %v70)
	%v72 = icmp ne i32 %v71, 0
	br i1 %v72, label %b18, label %b19
b21:
	%v77 = load i32, i32* %v74
	%v78 = icmp slt i32 %v77, 6
	br i1 %v78, label %b22, label %b24
b22:
	%v82 = getelementptr inbounds [2 x i32], [2 x i32]* %v5, i32 0, i32 0
	%v83 = getelementptr inbounds [4 x i32], [4 x i32]* %v10, i32 0, i32 0
	%v84 = load i32, i32* %v74
	%v85 = mul i32 2, %v84
	%v86 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 %v85
	call void @f___vec_mul(i32* %v82, i32* %v83, i32* %v86)
	%v88 = load i32, i32* %v74
	%v89 = mul i32 2, %v88
	%v90 = add i32 %v89, 1
	%v91 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 %v90
	%v92 = load i32, i32* %v91
	%v93 = load i32, i32* %v74
	%v94 = mul i32 2, %v93
	%v95 = add i32 %v94, 0
	%v96 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 %v95
	%v97 = load i32, i32* %v96
	%v98 = load i32, i32* %v44
	%v99 = getelementptr inbounds [2 x i32], [2 x i32]* %v5, i32 0, i32 1
	%v100 = load i32, i32* %v99
	call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @s9, i64 0, i64 0))
	call void @putint(i32 %v92)
	call void @putstr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @s10, i64 0, i64 0))
	call void @putint(i32 %v97)
	call void @putstr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @s11, i64 0, i64 0))
	call void @putint(i32 %v98)
	call void @putstr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @s12, i64 0, i64 0))
	call void @putint(i32 %v100)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @s13, i64 0, i64 0))
	%v110 = load i32, i32* %v74
	%v111 = add i32 %v110, 1
	store i32 %v111, i32* %v74
	%v113 = load i32, i32* %v74
	%v114 = icmp sge i32 %v113, 6
	br i1 %v114, label %b25, label %b26
b23:
	br label %b19
b24:
	%v80 = icmp ne i32 1, 0
	br i1 %v80, label %b22, label %b23
b25:
	br label %b23
	br label %b27
b26:
	br label %b21
	br label %b27
b27:
	br label %b21
}