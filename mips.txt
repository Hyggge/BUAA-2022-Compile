.data
g0: .space 16
g1: .space 16
g2: .space 16
s0: .asciiz "Error!\n"
s1: .asciiz " "
s2: .asciiz "\n"
s3: .asciiz " "
s4: .asciiz "\n"
s5: .asciiz "19373372\n"
s6: .asciiz "a[n] = a[n - 1] + a[n - 2] (for different init values)\n"
s7: .asciiz "/* input = "
s8: .asciiz " */\n"
s9: .asciiz "when a[0] = "
s10: .asciiz ", a[1] = "
s11: .asciiz " ==> a["
s12: .asciiz "] = "
s13: .asciiz "\n"
s14: .asciiz "//////////////////////////////////////\n"
s15: .asciiz "/****************** END ******************/\n"


.text
li $t0 1
sw $t0 g0+0
li $t0 1
sw $t0 g0+4
li $t0 1
sw $t0 g0+8
li $t0 0
sw $t0 g0+12
li $t0 5
sw $t0 g1+0
li $t0 5
sw $t0 g1+4
li $t0 2
sw $t0 g1+8
li $t0 3
sw $t0 g1+12
li $t0 1
sw $t0 g2+0
li $t0 1
sw $t0 g2+4
li $t0 1
sw $t0 g2+8
li $t0 0
sw $t0 g2+12

# jump to main function
jal main
j end
f___vec_mul:
b0:

# %v0 = getelementptr inbounds i32, i32* %a0, i32 0
lw $t0 -4($sp)
addi $t2 $t0 0
sw $t2 -16($sp)

# %v1 = getelementptr inbounds i32, i32* %a2, i32 0
lw $t0 -12($sp)
addi $t2 $t0 0
sw $t2 -20($sp)

# %v2 = load i32, i32* %v1
lw $t0 -20($sp)
lw $t1 0($t0)
sw $t1 -24($sp)

# %v3 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -28($sp)

# %v4 = add i32 %v3, 0
lw $t0 -28($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -32($sp)

# %v5 = getelementptr inbounds i32, i32* %a1, i32 %v4
lw $t0 -8($sp)
lw $t1 -32($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -36($sp)

# %v6 = load i32, i32* %v5
lw $t0 -36($sp)
lw $t1 0($t0)
sw $t1 -40($sp)

# %v7 = mul i32 %v2, %v6
lw $t0 -24($sp)
lw $t1 -40($sp)
mult $t0 $t1
mflo $t2
sw $t2 -44($sp)

# %v8 = getelementptr inbounds i32, i32* %a2, i32 1
lw $t0 -12($sp)
addi $t2 $t0 4
sw $t2 -48($sp)

# %v9 = load i32, i32* %v8
lw $t0 -48($sp)
lw $t1 0($t0)
sw $t1 -52($sp)

# %v10 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -56($sp)

# %v11 = add i32 %v10, 1
lw $t0 -56($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -60($sp)

# %v12 = getelementptr inbounds i32, i32* %a1, i32 %v11
lw $t0 -8($sp)
lw $t1 -60($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -64($sp)

# %v13 = load i32, i32* %v12
lw $t0 -64($sp)
lw $t1 0($t0)
sw $t1 -68($sp)

# %v14 = mul i32 %v9, %v13
lw $t0 -52($sp)
lw $t1 -68($sp)
mult $t0 $t1
mflo $t2
sw $t2 -72($sp)

# %v15 = add i32 %v7, %v14
lw $t0 -44($sp)
lw $t1 -72($sp)
addu $t2 $t0 $t1
sw $t2 -76($sp)

# store i32 %v15, i32* %v0
lw $t0 -16($sp)
lw $t1 -76($sp)
sw $t1 0($t0)

# %v17 = getelementptr inbounds i32, i32* %a0, i32 1
lw $t0 -4($sp)
addi $t2 $t0 4
sw $t2 -80($sp)

# %v18 = getelementptr inbounds i32, i32* %a2, i32 0
lw $t0 -12($sp)
addi $t2 $t0 0
sw $t2 -84($sp)

# %v19 = load i32, i32* %v18
lw $t0 -84($sp)
lw $t1 0($t0)
sw $t1 -88($sp)

# %v20 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -92($sp)

# %v21 = add i32 %v20, 0
lw $t0 -92($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -96($sp)

# %v22 = getelementptr inbounds i32, i32* %a1, i32 %v21
lw $t0 -8($sp)
lw $t1 -96($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -100($sp)

# %v23 = load i32, i32* %v22
lw $t0 -100($sp)
lw $t1 0($t0)
sw $t1 -104($sp)

# %v24 = mul i32 %v19, %v23
lw $t0 -88($sp)
lw $t1 -104($sp)
mult $t0 $t1
mflo $t2
sw $t2 -108($sp)

# %v25 = getelementptr inbounds i32, i32* %a2, i32 1
lw $t0 -12($sp)
addi $t2 $t0 4
sw $t2 -112($sp)

# %v26 = load i32, i32* %v25
lw $t0 -112($sp)
lw $t1 0($t0)
sw $t1 -116($sp)

# %v27 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -120($sp)

# %v28 = add i32 %v27, 1
lw $t0 -120($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -124($sp)

# %v29 = getelementptr inbounds i32, i32* %a1, i32 %v28
lw $t0 -8($sp)
lw $t1 -124($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -128($sp)

# %v30 = load i32, i32* %v29
lw $t0 -128($sp)
lw $t1 0($t0)
sw $t1 -132($sp)

# %v31 = mul i32 %v26, %v30
lw $t0 -116($sp)
lw $t1 -132($sp)
mult $t0 $t1
mflo $t2
sw $t2 -136($sp)

# %v32 = add i32 %v24, %v31
lw $t0 -108($sp)
lw $t1 -136($sp)
addu $t2 $t0 $t1
sw $t2 -140($sp)

# store i32 %v32, i32* %v17
lw $t0 -80($sp)
lw $t1 -140($sp)
sw $t1 0($t0)

# ret void
jr $ra
f___mat_mul:
b1:

# %v0 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -16($sp)

# %v1 = add i32 %v0, 0
lw $t0 -16($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -20($sp)

# %v2 = getelementptr inbounds i32, i32* %a3, i32 %v1
lw $t0 -4($sp)
lw $t1 -20($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -24($sp)

# %v3 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -28($sp)

# %v4 = add i32 %v3, 0
lw $t0 -28($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -32($sp)

# %v5 = getelementptr inbounds i32, i32* %a4, i32 %v4
lw $t0 -8($sp)
lw $t1 -32($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -36($sp)

# %v6 = load i32, i32* %v5
lw $t0 -36($sp)
lw $t1 0($t0)
sw $t1 -40($sp)

# %v7 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -44($sp)

# %v8 = add i32 %v7, 0
lw $t0 -44($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -48($sp)

# %v9 = getelementptr inbounds i32, i32* %a5, i32 %v8
lw $t0 -12($sp)
lw $t1 -48($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -52($sp)

# %v10 = load i32, i32* %v9
lw $t0 -52($sp)
lw $t1 0($t0)
sw $t1 -56($sp)

# %v11 = mul i32 %v6, %v10
lw $t0 -40($sp)
lw $t1 -56($sp)
mult $t0 $t1
mflo $t2
sw $t2 -60($sp)

# %v12 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -64($sp)

# %v13 = add i32 %v12, 1
lw $t0 -64($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -68($sp)

# %v14 = getelementptr inbounds i32, i32* %a4, i32 %v13
lw $t0 -8($sp)
lw $t1 -68($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -72($sp)

# %v15 = load i32, i32* %v14
lw $t0 -72($sp)
lw $t1 0($t0)
sw $t1 -76($sp)

# %v16 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -80($sp)

# %v17 = add i32 %v16, 0
lw $t0 -80($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -84($sp)

# %v18 = getelementptr inbounds i32, i32* %a5, i32 %v17
lw $t0 -12($sp)
lw $t1 -84($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -88($sp)

# %v19 = load i32, i32* %v18
lw $t0 -88($sp)
lw $t1 0($t0)
sw $t1 -92($sp)

# %v20 = mul i32 %v15, %v19
lw $t0 -76($sp)
lw $t1 -92($sp)
mult $t0 $t1
mflo $t2
sw $t2 -96($sp)

# %v21 = add i32 %v11, %v20
lw $t0 -60($sp)
lw $t1 -96($sp)
addu $t2 $t0 $t1
sw $t2 -100($sp)

# store i32 %v21, i32* %v2
lw $t0 -24($sp)
lw $t1 -100($sp)
sw $t1 0($t0)

# %v23 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -104($sp)

# %v24 = add i32 %v23, 1
lw $t0 -104($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -108($sp)

# %v25 = getelementptr inbounds i32, i32* %a3, i32 %v24
lw $t0 -4($sp)
lw $t1 -108($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -112($sp)

# %v26 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -116($sp)

# %v27 = add i32 %v26, 0
lw $t0 -116($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -120($sp)

# %v28 = getelementptr inbounds i32, i32* %a4, i32 %v27
lw $t0 -8($sp)
lw $t1 -120($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -124($sp)

# %v29 = load i32, i32* %v28
lw $t0 -124($sp)
lw $t1 0($t0)
sw $t1 -128($sp)

# %v30 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -132($sp)

# %v31 = add i32 %v30, 1
lw $t0 -132($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -136($sp)

# %v32 = getelementptr inbounds i32, i32* %a5, i32 %v31
lw $t0 -12($sp)
lw $t1 -136($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -140($sp)

# %v33 = load i32, i32* %v32
lw $t0 -140($sp)
lw $t1 0($t0)
sw $t1 -144($sp)

# %v34 = mul i32 %v29, %v33
lw $t0 -128($sp)
lw $t1 -144($sp)
mult $t0 $t1
mflo $t2
sw $t2 -148($sp)

# %v35 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -152($sp)

# %v36 = add i32 %v35, 1
lw $t0 -152($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -156($sp)

# %v37 = getelementptr inbounds i32, i32* %a4, i32 %v36
lw $t0 -8($sp)
lw $t1 -156($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -160($sp)

# %v38 = load i32, i32* %v37
lw $t0 -160($sp)
lw $t1 0($t0)
sw $t1 -164($sp)

# %v39 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -168($sp)

# %v40 = add i32 %v39, 1
lw $t0 -168($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -172($sp)

# %v41 = getelementptr inbounds i32, i32* %a5, i32 %v40
lw $t0 -12($sp)
lw $t1 -172($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -176($sp)

# %v42 = load i32, i32* %v41
lw $t0 -176($sp)
lw $t1 0($t0)
sw $t1 -180($sp)

# %v43 = mul i32 %v38, %v42
lw $t0 -164($sp)
lw $t1 -180($sp)
mult $t0 $t1
mflo $t2
sw $t2 -184($sp)

# %v44 = add i32 %v34, %v43
lw $t0 -148($sp)
lw $t1 -184($sp)
addu $t2 $t0 $t1
sw $t2 -188($sp)

# store i32 %v44, i32* %v25
lw $t0 -112($sp)
lw $t1 -188($sp)
sw $t1 0($t0)

# %v46 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -192($sp)

# %v47 = add i32 %v46, 0
lw $t0 -192($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -196($sp)

# %v48 = getelementptr inbounds i32, i32* %a3, i32 %v47
lw $t0 -4($sp)
lw $t1 -196($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -200($sp)

# %v49 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -204($sp)

# %v50 = add i32 %v49, 0
lw $t0 -204($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -208($sp)

# %v51 = getelementptr inbounds i32, i32* %a4, i32 %v50
lw $t0 -8($sp)
lw $t1 -208($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -212($sp)

# %v52 = load i32, i32* %v51
lw $t0 -212($sp)
lw $t1 0($t0)
sw $t1 -216($sp)

# %v53 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -220($sp)

# %v54 = add i32 %v53, 0
lw $t0 -220($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -224($sp)

# %v55 = getelementptr inbounds i32, i32* %a5, i32 %v54
lw $t0 -12($sp)
lw $t1 -224($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -228($sp)

# %v56 = load i32, i32* %v55
lw $t0 -228($sp)
lw $t1 0($t0)
sw $t1 -232($sp)

# %v57 = mul i32 %v52, %v56
lw $t0 -216($sp)
lw $t1 -232($sp)
mult $t0 $t1
mflo $t2
sw $t2 -236($sp)

# %v58 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -240($sp)

# %v59 = add i32 %v58, 1
lw $t0 -240($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -244($sp)

# %v60 = getelementptr inbounds i32, i32* %a4, i32 %v59
lw $t0 -8($sp)
lw $t1 -244($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -248($sp)

# %v61 = load i32, i32* %v60
lw $t0 -248($sp)
lw $t1 0($t0)
sw $t1 -252($sp)

# %v62 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -256($sp)

# %v63 = add i32 %v62, 0
lw $t0 -256($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -260($sp)

# %v64 = getelementptr inbounds i32, i32* %a5, i32 %v63
lw $t0 -12($sp)
lw $t1 -260($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -264($sp)

# %v65 = load i32, i32* %v64
lw $t0 -264($sp)
lw $t1 0($t0)
sw $t1 -268($sp)

# %v66 = mul i32 %v61, %v65
lw $t0 -252($sp)
lw $t1 -268($sp)
mult $t0 $t1
mflo $t2
sw $t2 -272($sp)

# %v67 = add i32 %v57, %v66
lw $t0 -236($sp)
lw $t1 -272($sp)
addu $t2 $t0 $t1
sw $t2 -276($sp)

# store i32 %v67, i32* %v48
lw $t0 -200($sp)
lw $t1 -276($sp)
sw $t1 0($t0)

# %v69 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -280($sp)

# %v70 = add i32 %v69, 1
lw $t0 -280($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -284($sp)

# %v71 = getelementptr inbounds i32, i32* %a3, i32 %v70
lw $t0 -4($sp)
lw $t1 -284($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -288($sp)

# %v72 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -292($sp)

# %v73 = add i32 %v72, 0
lw $t0 -292($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -296($sp)

# %v74 = getelementptr inbounds i32, i32* %a4, i32 %v73
lw $t0 -8($sp)
lw $t1 -296($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -300($sp)

# %v75 = load i32, i32* %v74
lw $t0 -300($sp)
lw $t1 0($t0)
sw $t1 -304($sp)

# %v76 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -308($sp)

# %v77 = add i32 %v76, 1
lw $t0 -308($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -312($sp)

# %v78 = getelementptr inbounds i32, i32* %a5, i32 %v77
lw $t0 -12($sp)
lw $t1 -312($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -316($sp)

# %v79 = load i32, i32* %v78
lw $t0 -316($sp)
lw $t1 0($t0)
sw $t1 -320($sp)

# %v80 = mul i32 %v75, %v79
lw $t0 -304($sp)
lw $t1 -320($sp)
mult $t0 $t1
mflo $t2
sw $t2 -324($sp)

# %v81 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -328($sp)

# %v82 = add i32 %v81, 1
lw $t0 -328($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -332($sp)

# %v83 = getelementptr inbounds i32, i32* %a4, i32 %v82
lw $t0 -8($sp)
lw $t1 -332($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -336($sp)

# %v84 = load i32, i32* %v83
lw $t0 -336($sp)
lw $t1 0($t0)
sw $t1 -340($sp)

# %v85 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -344($sp)

# %v86 = add i32 %v85, 1
lw $t0 -344($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -348($sp)

# %v87 = getelementptr inbounds i32, i32* %a5, i32 %v86
lw $t0 -12($sp)
lw $t1 -348($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -352($sp)

# %v88 = load i32, i32* %v87
lw $t0 -352($sp)
lw $t1 0($t0)
sw $t1 -356($sp)

# %v89 = mul i32 %v84, %v88
lw $t0 -340($sp)
lw $t1 -356($sp)
mult $t0 $t1
mflo $t2
sw $t2 -360($sp)

# %v90 = add i32 %v80, %v89
lw $t0 -324($sp)
lw $t1 -360($sp)
addu $t2 $t0 $t1
sw $t2 -364($sp)

# store i32 %v90, i32* %v71
lw $t0 -288($sp)
lw $t1 -364($sp)
sw $t1 0($t0)

# ret void
jr $ra
f___power:
b2:

# %v0 = alloca i32
addi $t0 $sp -16
sw $t0 -20($sp)

# store i32 %a6, i32* %v0
lw $t0 -20($sp)
lw $t1 -4($sp)
sw $t1 0($t0)

# %v2 = load i32, i32* %v0
lw $t0 -20($sp)
lw $t1 0($t0)
sw $t1 -24($sp)

# %v3 = icmp eq i32 %v2, 1
lw $t0 -24($sp)
li $t1 1
seq $t2 $t0 $t1
sw $t2 -28($sp)

# br i1 %v3, label %b3, label %b4
lw $t0 -28($sp)
bne $t0 $zero b3
j b4
b3:

# %v5 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -32($sp)

# %v6 = add i32 %v5, 0
lw $t0 -32($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -36($sp)

# %v7 = getelementptr inbounds i32, i32* %a8, i32 %v6
lw $t0 -12($sp)
lw $t1 -36($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -40($sp)

# %v8 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -44($sp)

# %v9 = add i32 %v8, 0
lw $t0 -44($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -48($sp)

# %v10 = getelementptr inbounds i32, i32* %a7, i32 %v9
lw $t0 -8($sp)
lw $t1 -48($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -52($sp)

# %v11 = load i32, i32* %v10
lw $t0 -52($sp)
lw $t1 0($t0)
sw $t1 -56($sp)

# store i32 %v11, i32* %v7
lw $t0 -40($sp)
lw $t1 -56($sp)
sw $t1 0($t0)

# %v13 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -60($sp)

# %v14 = add i32 %v13, 1
lw $t0 -60($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -64($sp)

# %v15 = getelementptr inbounds i32, i32* %a8, i32 %v14
lw $t0 -12($sp)
lw $t1 -64($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -68($sp)

# %v16 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -72($sp)

# %v17 = add i32 %v16, 1
lw $t0 -72($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -76($sp)

# %v18 = getelementptr inbounds i32, i32* %a7, i32 %v17
lw $t0 -8($sp)
lw $t1 -76($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -80($sp)

# %v19 = load i32, i32* %v18
lw $t0 -80($sp)
lw $t1 0($t0)
sw $t1 -84($sp)

# store i32 %v19, i32* %v15
lw $t0 -68($sp)
lw $t1 -84($sp)
sw $t1 0($t0)

# %v21 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -88($sp)

# %v22 = add i32 %v21, 0
lw $t0 -88($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -92($sp)

# %v23 = getelementptr inbounds i32, i32* %a8, i32 %v22
lw $t0 -12($sp)
lw $t1 -92($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -96($sp)

# %v24 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -100($sp)

# %v25 = add i32 %v24, 0
lw $t0 -100($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -104($sp)

# %v26 = getelementptr inbounds i32, i32* %a7, i32 %v25
lw $t0 -8($sp)
lw $t1 -104($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -108($sp)

# %v27 = load i32, i32* %v26
lw $t0 -108($sp)
lw $t1 0($t0)
sw $t1 -112($sp)

# store i32 %v27, i32* %v23
lw $t0 -96($sp)
lw $t1 -112($sp)
sw $t1 0($t0)

# %v29 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -116($sp)

# %v30 = add i32 %v29, 1
lw $t0 -116($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -120($sp)

# %v31 = getelementptr inbounds i32, i32* %a8, i32 %v30
lw $t0 -12($sp)
lw $t1 -120($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -124($sp)

# %v32 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -128($sp)

# %v33 = add i32 %v32, 1
lw $t0 -128($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -132($sp)

# %v34 = getelementptr inbounds i32, i32* %a7, i32 %v33
lw $t0 -8($sp)
lw $t1 -132($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -136($sp)

# %v35 = load i32, i32* %v34
lw $t0 -136($sp)
lw $t1 0($t0)
sw $t1 -140($sp)

# store i32 %v35, i32* %v31
lw $t0 -124($sp)
lw $t1 -140($sp)
sw $t1 0($t0)

# ret i32 0
li $v0 0
jr $ra

# br label %b5
j b5
b4:

# %v39 = getelementptr inbounds i32, i32* %a8, i32 0
lw $t0 -12($sp)
addi $t2 $t0 0
sw $t2 -144($sp)

# %v40 = getelementptr inbounds i32, i32* %a7, i32 0
lw $t0 -8($sp)
addi $t2 $t0 0
sw $t2 -148($sp)

# %v41 = getelementptr inbounds [4 x i32], [4 x i32]* @g0, i32 0, i32 0
la $t0, g0
addi $t2 $t0 0
sw $t2 -152($sp)

# call void @f___mat_mul(i32* %v39, i32* %v40, i32* %v41)
sw $sp -156($sp)
sw $ra -160($sp)
lw $t0 -144($sp)
sw $t0 -164($sp)
lw $t0 -148($sp)
sw $t0 -168($sp)
lw $t0 -152($sp)
sw $t0 -172($sp)
addi $sp $sp -160
jal f___mat_mul
lw $ra 0($sp)
lw $sp 4($sp)
sw $v0 -156($sp)

# %v43 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -160($sp)

# %v44 = add i32 %v43, 0
lw $t0 -160($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -164($sp)

# %v45 = getelementptr inbounds i32, i32* %a7, i32 %v44
lw $t0 -8($sp)
lw $t1 -164($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -168($sp)

# %v46 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -172($sp)

# %v47 = add i32 %v46, 0
lw $t0 -172($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -176($sp)

# %v48 = getelementptr inbounds i32, i32* %a8, i32 %v47
lw $t0 -12($sp)
lw $t1 -176($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -180($sp)

# %v49 = load i32, i32* %v48
lw $t0 -180($sp)
lw $t1 0($t0)
sw $t1 -184($sp)

# store i32 %v49, i32* %v45
lw $t0 -168($sp)
lw $t1 -184($sp)
sw $t1 0($t0)

# %v51 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -188($sp)

# %v52 = add i32 %v51, 1
lw $t0 -188($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -192($sp)

# %v53 = getelementptr inbounds i32, i32* %a7, i32 %v52
lw $t0 -8($sp)
lw $t1 -192($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -196($sp)

# %v54 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -200($sp)

# %v55 = add i32 %v54, 1
lw $t0 -200($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -204($sp)

# %v56 = getelementptr inbounds i32, i32* %a8, i32 %v55
lw $t0 -12($sp)
lw $t1 -204($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -208($sp)

# %v57 = load i32, i32* %v56
lw $t0 -208($sp)
lw $t1 0($t0)
sw $t1 -212($sp)

# store i32 %v57, i32* %v53
lw $t0 -196($sp)
lw $t1 -212($sp)
sw $t1 0($t0)

# %v59 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -216($sp)

# %v60 = add i32 %v59, 0
lw $t0 -216($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -220($sp)

# %v61 = getelementptr inbounds i32, i32* %a7, i32 %v60
lw $t0 -8($sp)
lw $t1 -220($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -224($sp)

# %v62 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -228($sp)

# %v63 = add i32 %v62, 0
lw $t0 -228($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -232($sp)

# %v64 = getelementptr inbounds i32, i32* %a8, i32 %v63
lw $t0 -12($sp)
lw $t1 -232($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -236($sp)

# %v65 = load i32, i32* %v64
lw $t0 -236($sp)
lw $t1 0($t0)
sw $t1 -240($sp)

# store i32 %v65, i32* %v61
lw $t0 -224($sp)
lw $t1 -240($sp)
sw $t1 0($t0)

# %v67 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -244($sp)

# %v68 = add i32 %v67, 1
lw $t0 -244($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -248($sp)

# %v69 = getelementptr inbounds i32, i32* %a7, i32 %v68
lw $t0 -8($sp)
lw $t1 -248($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -252($sp)

# %v70 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -256($sp)

# %v71 = add i32 %v70, 1
lw $t0 -256($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -260($sp)

# %v72 = getelementptr inbounds i32, i32* %a8, i32 %v71
lw $t0 -12($sp)
lw $t1 -260($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -264($sp)

# %v73 = load i32, i32* %v72
lw $t0 -264($sp)
lw $t1 0($t0)
sw $t1 -268($sp)

# store i32 %v73, i32* %v69
lw $t0 -252($sp)
lw $t1 -268($sp)
sw $t1 0($t0)

# %v75 = load i32, i32* %v0
lw $t0 -20($sp)
lw $t1 0($t0)
sw $t1 -272($sp)

# %v76 = sub i32 %v75, 1
lw $t0 -272($sp)
li $t1 1
subu $t2 $t0 $t1
sw $t2 -276($sp)

# %v77 = getelementptr inbounds i32, i32* %a7, i32 0
lw $t0 -8($sp)
addi $t2 $t0 0
sw $t2 -280($sp)

# %v78 = getelementptr inbounds i32, i32* %a8, i32 0
lw $t0 -12($sp)
addi $t2 $t0 0
sw $t2 -284($sp)

# %v79 = call i32 @f___power(i32 %v76, i32* %v77, i32* %v78)
sw $sp -288($sp)
sw $ra -292($sp)
lw $t0 -276($sp)
sw $t0 -296($sp)
lw $t0 -280($sp)
sw $t0 -300($sp)
lw $t0 -284($sp)
sw $t0 -304($sp)
addi $sp $sp -292
jal f___power
lw $ra 0($sp)
lw $sp 4($sp)
sw $v0 -288($sp)

# ret i32 %v79
lw $v0 -288($sp)
jr $ra

# br label %b5
j b5
b5:

# ret i32 0
li $v0 0
jr $ra
f_power:
b6:

# %v0 = alloca i32
addi $t0 $sp -12
sw $t0 -16($sp)

# store i32 %a9, i32* %v0
lw $t0 -16($sp)
lw $t1 -4($sp)
sw $t1 0($t0)

# %v2 = load i32, i32* %v0
lw $t0 -16($sp)
lw $t1 0($t0)
sw $t1 -20($sp)

# %v3 = icmp sle i32 %v2, 0
lw $t0 -20($sp)
li $t1 0
sle $t2 $t0 $t1
sw $t2 -24($sp)

# br i1 %v3, label %b7, label %b8
lw $t0 -24($sp)
bne $t0 $zero b7
j b8
b7:

# %v5 = sub i32 0, 1
li $t0 0
li $t1 1
subu $t2 $t0 $t1
sw $t2 -28($sp)

# ret i32 %v5
lw $v0 -28($sp)
jr $ra

# br label %b8
j b8
b8:

# %v8 = alloca [4 x i32]
addi $t0 $sp -44
sw $t0 -48($sp)

# %v9 = getelementptr inbounds [4 x i32], [4 x i32]* %v8, i32 0, i32 0
lw $t0 -48($sp)
addi $t2 $t0 0
sw $t2 -52($sp)

# store i32 1, i32* %v9
lw $t0 -52($sp)
li $t1 1
sw $t1 0($t0)

# %v11 = getelementptr inbounds [4 x i32], [4 x i32]* %v8, i32 0, i32 1
lw $t0 -48($sp)
addi $t2 $t0 4
sw $t2 -56($sp)

# store i32 1, i32* %v11
lw $t0 -56($sp)
li $t1 1
sw $t1 0($t0)

# %v13 = getelementptr inbounds [4 x i32], [4 x i32]* %v8, i32 0, i32 2
lw $t0 -48($sp)
addi $t2 $t0 8
sw $t2 -60($sp)

# store i32 1, i32* %v13
lw $t0 -60($sp)
li $t1 1
sw $t1 0($t0)

# %v15 = getelementptr inbounds [4 x i32], [4 x i32]* %v8, i32 0, i32 3
lw $t0 -48($sp)
addi $t2 $t0 12
sw $t2 -64($sp)

# store i32 0, i32* %v15
lw $t0 -64($sp)
li $t1 0
sw $t1 0($t0)

# %v17 = load i32, i32* %v0
lw $t0 -16($sp)
lw $t1 0($t0)
sw $t1 -68($sp)

# %v18 = getelementptr inbounds [4 x i32], [4 x i32]* %v8, i32 0, i32 0
lw $t0 -48($sp)
addi $t2 $t0 0
sw $t2 -72($sp)

# %v19 = getelementptr inbounds i32, i32* %a10, i32 0
lw $t0 -8($sp)
addi $t2 $t0 0
sw $t2 -76($sp)

# %v20 = call i32 @f___power(i32 %v17, i32* %v18, i32* %v19)
sw $sp -80($sp)
sw $ra -84($sp)
lw $t0 -68($sp)
sw $t0 -88($sp)
lw $t0 -72($sp)
sw $t0 -92($sp)
lw $t0 -76($sp)
sw $t0 -96($sp)
addi $sp $sp -84
jal f___power
lw $ra 0($sp)
lw $sp 4($sp)
sw $v0 -80($sp)

# ret i32 %v20
lw $v0 -80($sp)
jr $ra
f_error:
b9:

# call void @putstr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @s0, i64 0, i64 0))
la $a0, s0
li $v0 4
syscall

# ret i32 1
li $v0 1
jr $ra
f_out:
b10:

# %v0 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -8($sp)

# %v1 = add i32 %v0, 0
lw $t0 -8($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -12($sp)

# %v2 = getelementptr inbounds i32, i32* %a11, i32 %v1
lw $t0 -4($sp)
lw $t1 -12($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -16($sp)

# %v3 = load i32, i32* %v2
lw $t0 -16($sp)
lw $t1 0($t0)
sw $t1 -20($sp)

# %v4 = mul i32 2, 0
li $t0 2
li $t1 0
mult $t0 $t1
mflo $t2
sw $t2 -24($sp)

# %v5 = add i32 %v4, 1
lw $t0 -24($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -28($sp)

# %v6 = getelementptr inbounds i32, i32* %a11, i32 %v5
lw $t0 -4($sp)
lw $t1 -28($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -32($sp)

# %v7 = load i32, i32* %v6
lw $t0 -32($sp)
lw $t1 0($t0)
sw $t1 -36($sp)

# %v8 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -40($sp)

# %v9 = add i32 %v8, 0
lw $t0 -40($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -44($sp)

# %v10 = getelementptr inbounds i32, i32* %a11, i32 %v9
lw $t0 -4($sp)
lw $t1 -44($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -48($sp)

# %v11 = load i32, i32* %v10
lw $t0 -48($sp)
lw $t1 0($t0)
sw $t1 -52($sp)

# %v12 = mul i32 2, 1
li $t0 2
li $t1 1
mult $t0 $t1
mflo $t2
sw $t2 -56($sp)

# %v13 = add i32 %v12, 1
lw $t0 -56($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -60($sp)

# %v14 = getelementptr inbounds i32, i32* %a11, i32 %v13
lw $t0 -4($sp)
lw $t1 -60($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -64($sp)

# %v15 = load i32, i32* %v14
lw $t0 -64($sp)
lw $t1 0($t0)
sw $t1 -68($sp)
lw $a0 -20($sp)
li $v0 1
syscall

# call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @s1, i64 0, i64 0))
la $a0, s1
li $v0 4
syscall
lw $a0 -36($sp)
li $v0 1
syscall

# call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @s2, i64 0, i64 0))
la $a0, s2
li $v0 4
syscall
lw $a0 -52($sp)
li $v0 1
syscall

# call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @s3, i64 0, i64 0))
la $a0, s3
li $v0 4
syscall
lw $a0 -68($sp)
li $v0 1
syscall

# call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @s4, i64 0, i64 0))
la $a0, s4
li $v0 4
syscall

# ret i32 1
li $v0 1
jr $ra
main:
b11:

# %v0 = alloca i32
addi $t0 $sp -4
sw $t0 -8($sp)

# store i32 0, i32* %v0
lw $t0 -8($sp)
li $t1 0
sw $t1 0($t0)

# %v2 = alloca i32
addi $t0 $sp -12
sw $t0 -16($sp)
li $v0 5
syscall
sw $v0 -20($sp)

# store i32 %v3, i32* %v2
lw $t0 -16($sp)
lw $t1 -20($sp)
sw $t1 0($t0)

# %v5 = alloca [2 x i32]
addi $t0 $sp -28
sw $t0 -32($sp)

# %v6 = getelementptr inbounds [2 x i32], [2 x i32]* %v5, i32 0, i32 0
lw $t0 -32($sp)
addi $t2 $t0 0
sw $t2 -36($sp)

# store i32 0, i32* %v6
lw $t0 -36($sp)
li $t1 0
sw $t1 0($t0)

# %v8 = getelementptr inbounds [2 x i32], [2 x i32]* %v5, i32 0, i32 1
lw $t0 -32($sp)
addi $t2 $t0 4
sw $t2 -40($sp)

# store i32 0, i32* %v8
lw $t0 -40($sp)
li $t1 0
sw $t1 0($t0)

# %v10 = alloca [4 x i32]
addi $t0 $sp -56
sw $t0 -60($sp)

# %v11 = alloca [12 x i32]
addi $t0 $sp -108
sw $t0 -112($sp)

# %v12 = sub i32 0, 1
li $t0 0
li $t1 1
subu $t2 $t0 $t1
sw $t2 -116($sp)

# %v13 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 0
lw $t0 -112($sp)
addi $t2 $t0 0
sw $t2 -120($sp)

# store i32 1, i32* %v13
lw $t0 -120($sp)
li $t1 1
sw $t1 0($t0)

# %v15 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 1
lw $t0 -112($sp)
addi $t2 $t0 4
sw $t2 -124($sp)

# store i32 0, i32* %v15
lw $t0 -124($sp)
li $t1 0
sw $t1 0($t0)

# %v17 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 2
lw $t0 -112($sp)
addi $t2 $t0 8
sw $t2 -128($sp)

# store i32 1, i32* %v17
lw $t0 -128($sp)
li $t1 1
sw $t1 0($t0)

# %v19 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 3
lw $t0 -112($sp)
addi $t2 $t0 12
sw $t2 -132($sp)

# store i32 1, i32* %v19
lw $t0 -132($sp)
li $t1 1
sw $t1 0($t0)

# %v21 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 4
lw $t0 -112($sp)
addi $t2 $t0 16
sw $t2 -136($sp)

# store i32 2, i32* %v21
lw $t0 -136($sp)
li $t1 2
sw $t1 0($t0)

# %v23 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 5
lw $t0 -112($sp)
addi $t2 $t0 20
sw $t2 -140($sp)

# store i32 1, i32* %v23
lw $t0 -140($sp)
li $t1 1
sw $t1 0($t0)

# %v25 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 6
lw $t0 -112($sp)
addi $t2 $t0 24
sw $t2 -144($sp)

# store i32 3, i32* %v25
lw $t0 -144($sp)
li $t1 3
sw $t1 0($t0)

# %v27 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 7
lw $t0 -112($sp)
addi $t2 $t0 28
sw $t2 -148($sp)

# store i32 1, i32* %v27
lw $t0 -148($sp)
li $t1 1
sw $t1 0($t0)

# %v29 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 8
lw $t0 -112($sp)
addi $t2 $t0 32
sw $t2 -152($sp)

# store i32 4, i32* %v29
lw $t0 -152($sp)
li $t1 4
sw $t1 0($t0)

# %v31 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 9
lw $t0 -112($sp)
addi $t2 $t0 36
sw $t2 -156($sp)

# store i32 3, i32* %v31
lw $t0 -156($sp)
li $t1 3
sw $t1 0($t0)

# %v33 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 10
lw $t0 -112($sp)
addi $t2 $t0 40
sw $t2 -160($sp)

# store i32 %v12, i32* %v33
lw $t0 -160($sp)
lw $t1 -116($sp)
sw $t1 0($t0)

# %v35 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 11
lw $t0 -112($sp)
addi $t2 $t0 44
sw $t2 -164($sp)

# store i32 1, i32* %v35
lw $t0 -164($sp)
li $t1 1
sw $t1 0($t0)

# call void @putstr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @s5, i64 0, i64 0))
la $a0, s5
li $v0 4
syscall

# call void @putstr(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @s6, i64 0, i64 0))
la $a0, s6
li $v0 4
syscall

# br label %b12
j b12
b12:

# %v40 = load i32, i32* %v2
lw $t0 -16($sp)
lw $t1 0($t0)
sw $t1 -168($sp)

# %v41 = load i32, i32* %v0
lw $t0 -8($sp)
lw $t1 0($t0)
sw $t1 -172($sp)

# %v42 = icmp sgt i32 %v40, %v41
lw $t0 -168($sp)
lw $t1 -172($sp)
sgt $t2 $t0 $t1
sw $t2 -176($sp)

# br i1 %v42, label %b13, label %b14
lw $t0 -176($sp)
bne $t0 $zero b13
j b14
b13:

# %v44 = alloca i32
addi $t0 $sp -180
sw $t0 -184($sp)
li $v0 5
syscall
sw $v0 -188($sp)

# store i32 %v45, i32* %v44
lw $t0 -184($sp)
lw $t1 -188($sp)
sw $t1 0($t0)

# %v47 = alloca i32
addi $t0 $sp -192
sw $t0 -196($sp)

# %v48 = load i32, i32* %v44
lw $t0 -184($sp)
lw $t1 0($t0)
sw $t1 -200($sp)

# %v49 = getelementptr inbounds [4 x i32], [4 x i32]* %v10, i32 0, i32 0
lw $t0 -60($sp)
addi $t2 $t0 0
sw $t2 -204($sp)

# %v50 = call i32 @f_power(i32 %v48, i32* %v49)
sw $sp -208($sp)
sw $ra -212($sp)
lw $t0 -200($sp)
sw $t0 -216($sp)
lw $t0 -204($sp)
sw $t0 -220($sp)
addi $sp $sp -212
jal f_power
lw $ra 0($sp)
lw $sp 4($sp)
sw $v0 -208($sp)

# store i32 %v50, i32* %v47
lw $t0 -196($sp)
lw $t1 -208($sp)
sw $t1 0($t0)

# %v52 = load i32, i32* %v44
lw $t0 -184($sp)
lw $t1 0($t0)
sw $t1 -212($sp)

# call void @putstr(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @s7, i64 0, i64 0))
la $a0, s7
li $v0 4
syscall
lw $a0 -212($sp)
li $v0 1
syscall

# call void @putstr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @s8, i64 0, i64 0))
la $a0, s8
li $v0 4
syscall

# %v56 = load i32, i32* %v47
lw $t0 -196($sp)
lw $t1 0($t0)
sw $t1 -216($sp)

# %v57 = icmp ne i32 %v56, 0
lw $t0 -216($sp)
li $t1 0
sne $t2 $t0 $t1
sw $t2 -220($sp)

# br i1 %v57, label %b17, label %b16
lw $t0 -220($sp)
bne $t0 $zero b17
j b16
b14:

# call void @putstr(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @s15, i64 0, i64 0))
la $a0, s15
li $v0 4
syscall

# ret i32 0
li $v0 0
jr $ra

# ret i32 0
li $v0 0
jr $ra
b15:

# %v62 = load i32, i32* %v2
lw $t0 -16($sp)
lw $t1 0($t0)
sw $t1 -224($sp)

# %v63 = sub i32 %v62, 1
lw $t0 -224($sp)
li $t1 1
subu $t2 $t0 $t1
sw $t2 -228($sp)

# store i32 %v63, i32* %v2
lw $t0 -16($sp)
lw $t1 -228($sp)
sw $t1 0($t0)

# br label %b12
j b12

# br label %b16
j b16
b16:

# %v67 = load i32, i32* %v47
lw $t0 -196($sp)
lw $t1 0($t0)
sw $t1 -232($sp)

# %v68 = icmp ne i32 %v67, 0
lw $t0 -232($sp)
li $t1 0
sne $t2 $t0 $t1
sw $t2 -236($sp)

# br i1 %v68, label %b18, label %b20
lw $t0 -236($sp)
bne $t0 $zero b18
j b20
b17:

# %v59 = call i32 @f_error()
sw $sp -240($sp)
sw $ra -244($sp)
addi $sp $sp -244
jal f_error
lw $ra 0($sp)
lw $sp 4($sp)
sw $v0 -240($sp)

# %v60 = icmp ne i32 %v59, 0
lw $t0 -240($sp)
li $t1 0
sne $t2 $t0 $t1
sw $t2 -244($sp)

# br i1 %v60, label %b15, label %b16
lw $t0 -244($sp)
bne $t0 $zero b15
j b16
b18:

# %v74 = alloca i32
addi $t0 $sp -248
sw $t0 -252($sp)

# store i32 0, i32* %v74
lw $t0 -252($sp)
li $t1 0
sw $t1 0($t0)

# br label %b21
j b21
b19:

# call void @putstr(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @s14, i64 0, i64 0))
la $a0, s14
li $v0 4
syscall

# %v123 = load i32, i32* %v2
lw $t0 -16($sp)
lw $t1 0($t0)
sw $t1 -256($sp)

# %v124 = sub i32 1, %v123
li $t0 1
lw $t1 -256($sp)
subu $t2 $t0 $t1
sw $t2 -260($sp)

# %v125 = sub i32 0, %v124
li $t0 0
lw $t1 -260($sp)
subu $t2 $t0 $t1
sw $t2 -264($sp)

# %v126 = sub i32 0, %v125
li $t0 0
lw $t1 -264($sp)
subu $t2 $t0 $t1
sw $t2 -268($sp)

# %v127 = sub i32 0, %v126
li $t0 0
lw $t1 -268($sp)
subu $t2 $t0 $t1
sw $t2 -272($sp)

# store i32 %v127, i32* %v2
lw $t0 -16($sp)
lw $t1 -272($sp)
sw $t1 0($t0)

# br label %b12
j b12
b20:

# %v70 = getelementptr inbounds [4 x i32], [4 x i32]* %v10, i32 0, i32 0
lw $t0 -60($sp)
addi $t2 $t0 0
sw $t2 -276($sp)

# %v71 = call i32 @f_out(i32* %v70)
sw $sp -280($sp)
sw $ra -284($sp)
lw $t0 -276($sp)
sw $t0 -288($sp)
addi $sp $sp -284
jal f_out
lw $ra 0($sp)
lw $sp 4($sp)
sw $v0 -280($sp)

# %v72 = icmp ne i32 %v71, 0
lw $t0 -280($sp)
li $t1 0
sne $t2 $t0 $t1
sw $t2 -284($sp)

# br i1 %v72, label %b18, label %b19
lw $t0 -284($sp)
bne $t0 $zero b18
j b19
b21:

# %v77 = load i32, i32* %v74
lw $t0 -252($sp)
lw $t1 0($t0)
sw $t1 -288($sp)

# %v78 = icmp slt i32 %v77, 6
lw $t0 -288($sp)
li $t1 6
slt $t2 $t0 $t1
sw $t2 -292($sp)

# br i1 %v78, label %b22, label %b24
lw $t0 -292($sp)
bne $t0 $zero b22
j b24
b22:

# %v82 = getelementptr inbounds [2 x i32], [2 x i32]* %v5, i32 0, i32 0
lw $t0 -32($sp)
addi $t2 $t0 0
sw $t2 -296($sp)

# %v83 = getelementptr inbounds [4 x i32], [4 x i32]* %v10, i32 0, i32 0
lw $t0 -60($sp)
addi $t2 $t0 0
sw $t2 -300($sp)

# %v84 = load i32, i32* %v74
lw $t0 -252($sp)
lw $t1 0($t0)
sw $t1 -304($sp)

# %v85 = mul i32 2, %v84
li $t0 2
lw $t1 -304($sp)
mult $t0 $t1
mflo $t2
sw $t2 -308($sp)

# %v86 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 %v85
lw $t0 -112($sp)
lw $t1 -308($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -312($sp)

# call void @f___vec_mul(i32* %v82, i32* %v83, i32* %v86)
sw $sp -316($sp)
sw $ra -320($sp)
lw $t0 -296($sp)
sw $t0 -324($sp)
lw $t0 -300($sp)
sw $t0 -328($sp)
lw $t0 -312($sp)
sw $t0 -332($sp)
addi $sp $sp -320
jal f___vec_mul
lw $ra 0($sp)
lw $sp 4($sp)
sw $v0 -316($sp)

# %v88 = load i32, i32* %v74
lw $t0 -252($sp)
lw $t1 0($t0)
sw $t1 -320($sp)

# %v89 = mul i32 2, %v88
li $t0 2
lw $t1 -320($sp)
mult $t0 $t1
mflo $t2
sw $t2 -324($sp)

# %v90 = add i32 %v89, 1
lw $t0 -324($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -328($sp)

# %v91 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 %v90
lw $t0 -112($sp)
lw $t1 -328($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -332($sp)

# %v92 = load i32, i32* %v91
lw $t0 -332($sp)
lw $t1 0($t0)
sw $t1 -336($sp)

# %v93 = load i32, i32* %v74
lw $t0 -252($sp)
lw $t1 0($t0)
sw $t1 -340($sp)

# %v94 = mul i32 2, %v93
li $t0 2
lw $t1 -340($sp)
mult $t0 $t1
mflo $t2
sw $t2 -344($sp)

# %v95 = add i32 %v94, 0
lw $t0 -344($sp)
li $t1 0
addu $t2 $t0 $t1
sw $t2 -348($sp)

# %v96 = getelementptr inbounds [12 x i32], [12 x i32]* %v11, i32 0, i32 %v95
lw $t0 -112($sp)
lw $t1 -348($sp)
sll $t1 $t1 2
addu $t2 $t0 $t1
sw $t2 -352($sp)

# %v97 = load i32, i32* %v96
lw $t0 -352($sp)
lw $t1 0($t0)
sw $t1 -356($sp)

# %v98 = load i32, i32* %v44
lw $t0 -184($sp)
lw $t1 0($t0)
sw $t1 -360($sp)

# %v99 = getelementptr inbounds [2 x i32], [2 x i32]* %v5, i32 0, i32 1
lw $t0 -32($sp)
addi $t2 $t0 4
sw $t2 -364($sp)

# %v100 = load i32, i32* %v99
lw $t0 -364($sp)
lw $t1 0($t0)
sw $t1 -368($sp)

# call void @putstr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @s9, i64 0, i64 0))
la $a0, s9
li $v0 4
syscall
lw $a0 -336($sp)
li $v0 1
syscall

# call void @putstr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @s10, i64 0, i64 0))
la $a0, s10
li $v0 4
syscall
lw $a0 -356($sp)
li $v0 1
syscall

# call void @putstr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @s11, i64 0, i64 0))
la $a0, s11
li $v0 4
syscall
lw $a0 -360($sp)
li $v0 1
syscall

# call void @putstr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @s12, i64 0, i64 0))
la $a0, s12
li $v0 4
syscall
lw $a0 -368($sp)
li $v0 1
syscall

# call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @s13, i64 0, i64 0))
la $a0, s13
li $v0 4
syscall

# %v110 = load i32, i32* %v74
lw $t0 -252($sp)
lw $t1 0($t0)
sw $t1 -372($sp)

# %v111 = add i32 %v110, 1
lw $t0 -372($sp)
li $t1 1
addu $t2 $t0 $t1
sw $t2 -376($sp)

# store i32 %v111, i32* %v74
lw $t0 -252($sp)
lw $t1 -376($sp)
sw $t1 0($t0)

# %v113 = load i32, i32* %v74
lw $t0 -252($sp)
lw $t1 0($t0)
sw $t1 -380($sp)

# %v114 = icmp sge i32 %v113, 6
lw $t0 -380($sp)
li $t1 6
sge $t2 $t0 $t1
sw $t2 -384($sp)

# br i1 %v114, label %b25, label %b26
lw $t0 -384($sp)
bne $t0 $zero b25
j b26
b23:

# br label %b19
j b19
b24:

# %v80 = icmp ne i32 1, 0
li $t0 1
li $t1 0
sne $t2 $t0 $t1
sw $t2 -388($sp)

# br i1 %v80, label %b22, label %b23
lw $t0 -388($sp)
bne $t0 $zero b22
j b23
b25:

# br label %b23
j b23

# br label %b27
j b27
b26:

# br label %b21
j b21

# br label %b27
j b27
b27:

# br label %b21
j b21
end: