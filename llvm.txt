@g0 = dso_local global i32 4
@g1 = dso_local global [2 x i32] [i32 4, i32 8]

define dso_local i32 @foo(i32* a0) {
b0:
	%v0 = alloca i32
	%v1 = getelementptr inbounds i32, i32* a0, i32 1
	%v2 = load i32, i32* %v1
	store i32 %v2, i32* %v0
}

define dso_local i32 @main() {
b1:
	%v0 = alloca i32
	%v1 = mul i32 15, 6
	%v2 = add i32 %v1, 1
	store i32 %v2, i32* %v0
	%v4 = alloca [6 x i32]
	%v5 = getelementptr inbounds [6 x i32], [6 x i32]* %v4, i32 0, i32 0
	store i32 1, i32* %v5
	%v7 = getelementptr inbounds [6 x i32], [6 x i32]* %v4, i32 0, i32 1
	store i32 2, i32* %v7
	%v9 = getelementptr inbounds [6 x i32], [6 x i32]* %v4, i32 0, i32 2
	store i32 3, i32* %v9
	%v11 = getelementptr inbounds [6 x i32], [6 x i32]* %v4, i32 0, i32 3
	store i32 4, i32* %v11
	%v13 = getelementptr inbounds [6 x i32], [6 x i32]* %v4, i32 0, i32 4
	store i32 5, i32* %v13
	%v15 = getelementptr inbounds [6 x i32], [6 x i32]* %v4, i32 0, i32 5
	store i32 6, i32* %v15
	%v17 = mul i32 3, 1
	%v18 = add i32 %v17, 1
	%v19 = getelementptr inbounds [6 x i32], [6 x i32]* %v4, i32 0, i32 %v18
	%v20 = load i32, i32* %v0
	%v21 = load i32, i32* %v0
	%v22 = add i32 %v20, %v21
	store i32 %v22, i32* %v19
	%v24 = mul i32 3, 1
	%v25 = getelementptr inbounds [6 x i32], [6 x i32]* %v4, i32 0, i32 %v24
	%v26 = call i32 @foo(i32* %v25)
	ret i32 1
}